openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
  description: API para gestionar usuarios con login y 2FA offline
servers:
  - url: http://localhost:3000

paths:
  # --- CRUD Usuarios ---
  /usuarios:
    post:
      summary: Obtiene un usuario por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Juan Pérez
                  email:
                    type: string
                    example: juan@example.com
                  rol:
                    type: string
                    example: usuario
        '404':
          description: Usuario no encontrado


  /usuarios/nuevo:
    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                email:
                  type: string
                password:
                  type: string
                rol:
                  type: string
                  enum: [admin, editor, lector]
      responses:
        '201':
          description: Usuario creado

  /usuarios/update:
    put:
      summary: Actualiza un usuario por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID del usuario a actualizar
                nombre:
                  type: string
                email:
                  type: string
                rol:
                  type: string
                  enum: [admin, editor, lector]
              required:
                - id
                - nombre
                - email
                - rol
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  usuario:
                    type: object
                    properties:
                      id:
                        type: integer
                      nombre:
                        type: string
                      email:
                        type: string
                      rol:
                        type: string
        '404':
          description: Usuario no encontrado

 
  /usuarios/delete:
    delete:
      summary: Elimina un usuario enviando JSON con su ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  minimum: 1   # no permite negativos ni 0
                  description: ID del usuario (entero positivo)
              required:
                - id
      responses:
        '200':
          description: Usuario eliminado correctamente
        '200':
          description: ID inválido
        '200':
          description: Usuario no encontrado



  # --- Recuperación de contraseña ---
  /api/v1/forgot-password:
    post:
      summary: Enviar enlace para restablecer contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Correo de restablecimiento enviado
        '404':
          description: Usuario no encontrado

  /api/v1/reset-password/{token}:
    post:
      summary: Restablecer la contraseña con un token
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Token de restablecimiento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada
        '400':
          description: Token inválido o expirado

  # --- Login online (sin 2FA) ---
  /api/v1/login:
    post:
      summary: Iniciar sesión (online, sin 2FA)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso, devuelve userId para 2FA si aplica
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: integer
        '401':
          description: Credenciales inválidas

  # --- Verificación 2FA offline (TOTP) ---
  /api/v1/verify-2fa:
    post:
      summary: Verificar código 2FA (offline / TOTP)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                code:
                  type: string
                  description: Código de 6 dígitos de Google Authenticator
      responses:
        '200':
          description: Inicio de sesión exitoso con 2FA, devuelve JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
        '401':
          description: Código 2FA inválido o expirado
          
  # --- Geolocation ---
  /api/v1/get-by-id:
    post:
      summary: Obtiene el historial de ubicaciones de un usuario por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID del usuario para obtener el historial de ubicaciones.
              required:
                - userId
      responses:
        '200':
          description: Lista de ubicaciones para el usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                    timestamp:
                      type: string
                      format: date-time
                    action_id:
                      type: integer
        '400':
          description: Falta el ID de usuario o es inválido.
        '500':
          description: Error interno del servidor