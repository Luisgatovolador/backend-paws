openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.1.0
  description: API para listar, registrar, actualizar y eliminar usuarios con validaciones estrictas
servers:
  - url: http://localhost:3000
paths:
  /usuarios:
    get:
      summary: Lista todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '500':
          description: Error de conexión a base de datos
  /usuarios/nuevo:
    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NuevoUsuario'
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Error de validación (email inválido, contraseña insegura, rol no permitido)
        '409':
          description: Email ya registrado
  /usuarios/{id}:
    put:
      summary: Actualiza un usuario por ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NuevoUsuario'
      responses:
        '200':
          description: Usuario actualizado
        '400':
          description: Datos inválidos
        '404':
          description: Usuario no encontrado
    delete:
      summary: Elimina un usuario por ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Usuario eliminado
        '404':
          description: Usuario no encontrado
        '400':
          description: No se puede eliminar el último administrador
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        email:
          type: string
        rol:
          type: string
          enum: [admin, editor, lector]
    NuevoUsuario:
      type: object
      required: [nombre, email, password, rol]
      properties:
        nombre:
          type: string
          minLength: 2
          maxLength: 100
          pattern: "^(?!\\s*$)(?![Nn][Uu][Ll][Ll]$)(?!string$)(?!String$)(?!STRING$)[A-Za-zÁÉÍÓÚáéíóúÑñ ]+$"
          description: >
            Nombre del usuario. No puede estar vacío, contener solo espacios,
            ni valores inválidos como "null", "NULL", "NuLL", "string", "STRING".
            Solo se permiten letras y espacios.
        email:
          type: string
          format: email
          pattern: "^[a-zA-Z0-9._%+-]+@gmail\\.com$"
        password:
          type: string
          minLength: 8
          maxLength: 255
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z0-9]).+$"
        rol:
          type: string
          enum: [admin, editor, lector]
